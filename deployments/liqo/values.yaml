# Default values for liqo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Images' tag to select a development version of liqo instead of a release
tag: ""
# -- The pullPolicy for liqo pods
pullPolicy: "IfNotPresent"
apiServer:
  # -- The address that must be used to contact your API server, it needs to be reachable from the clusters that you will peer with (defaults to your master IP)
  address: ""
  # -- The port that must be used to contact your API server
  port: "6443"

advertisement:
  pod:
    # -- advertisement pod annotations
    annotations: {}
    # -- advertisement pod labels
    labels: {}
  # -- advertisement image repository
  imageName: "liqo/advertisement-operator"
  # -- broadcaster image repository
  broadcasterImageName: "liqo/advertisement-broadcaster"
  config:
    # -- It defines the percentage of available cluster resources that you are willing to share with foreign clusters.
    resourceSharingPercentage: 30
    # -- If set to false, the remote clusters will not be able to leverage your resources, but you will still be able to use theirs.
    enableBroadcaster: true

route:
  pod:
    # -- route pod annotations
    annotations: {}
    # -- route pod labels
    labels: {}
  # -- route image repository
  imageName: "liqo/liqonet"

gateway:
  pod:
    # -- gateway pod annotations
    annotations: {}
    # -- gateway pod labels
    labels: {}
  # -- gateway image repository
  imageName: "liqo/liqonet"
  service:
    # -- If you plan to use liqo over the Internet consider to change this field to "LoadBalancer".
    # More generally, if your cluster nodes are not directly reachable by the cluster to whom you are peering then change it to "LoadBalancer"
    type: "NodePort"
    annotations: {}

networkManager:
  pod:
    # -- networkManager pod annotations
    annotations: {}
    # -- networkManager pod labels
    labels: {}
  # -- networkManager image repository
  imageName: "liqo/liqonet"
  config:
    # -- The subnet used by the cluster for the pods, in CIDR notation.
    # At the moment the internal IPAM used by liqo only supports podCIDRs with netmask /16 (255.255.0.0).
    podCIDR: ""
    # -- The subnet used by the cluster for the services, in CIDR notation
    serviceCIDR: ""
    # -- Usually the IPs used for the pods in k8s clusters belong to private subnets.
    # In order to prevent IP conflicting between locally used private subnets in your infrastructure and private subnets belonging to remote clusters
    # you need tell liqo the subnets used in your cluster. E.g if your cluster nodes belong to the 192.168.2.0/24 subnet then
    # you should add that subnet to the reservedSubnets. PodCIDR and serviceCIDR used in the local cluster are automatically added to the reserved list.
    reservedSubnets: []
    # -- Set this field to true if you are deploying liqo in GKE cluster
    GKEProvider: false

crdReplicator:
  pod:
    # -- crdReplicator pod annotations
    annotations: {}
    # -- crdReplicator pod labels
    labels: {}
  # -- crdReplicator image repository
  imageName: "liqo/crd-replicator"

discovery:
  pod:
    # -- discovery pod annotations
    annotations: {}
    # -- discovery pod labels
    labels: {}
  # -- discovery image repository
  imageName: "liqo/discovery"
  config:
    # -- Set a mnemonic name for your cluster
    clusterName: ""
    # -- Automatically join discovered cluster exposing the Authentication Service with a valid certificate
    autojoin: true
    # -- Automatically join discovered cluster exposing the Authentication Service with a self-signed certificate
    autojoinUntrusted: true
    # -- Enable the mDNS advertisement on LANs, set to false to not be discoverable from other clusters in the same LAN
    enableAdvertisement: true
    # -- Enable the mDNS discovery on LANs, set to false to not look for other clusters available in the same LAN
    enableDiscovery: true
    # -- Time-to-live before an automatically discovered clusters is deleted from the list of available ones if no longer announced (in seconds)
    ttl: 90

auth:
  pod:
    # -- auth pod annotations
    annotations: {}
    # -- auth pod labels
    labels: {}
  # -- auth image repository
  imageName: "liqo/auth-service"
  initContainer:
    # -- auth init container image repository
    imageName: nginx:1.19
  service:
    # -- The type of service used to expose the Authentication Service
    # If you are exposing this service with an Ingress consider to change it to ClusterIP,
    # otherwise if you plan to use liqo over the Internet consider to change this field to "LoadBalancer".
    # See https://doc.liqo.io/user/scenarios/ for more details.
    type: "NodePort"
    # -- auth service annotations
    annotations: {}
  # -- Enable TLS for the Authentication Service Pod (using a self-signed certificate).
  # If you are exposing this service with an Ingress consider to disable it or add the appropriate annotations to the Ingress resource.
  tls: true
  # -- Overrides the port were your service is available, you should configure it if behind a NAT or using an Ingress with a port different from 443.
  portOverride: ""
  ingress:
    # -- Auth ingress annotations
    annotations: {}
    # -- Whether to enable the creation of the Ingress resource
    enable: false
    # -- Set the hostname for your ingress
    host: ""
    # -- Set your ingress class
    class: ""
  config:
    # -- Set to true to disable the authentication of discovered clusters. NB: use it only for testing installations
    allowEmptyToken: false

webhook:
  pod:
    # -- webhook pod annotations
    annotations: {}
    # -- webhook pod labels
    labels: {}
  # -- webhook image repository
  imageName: "liqo/liqo-webhook"
  initContainer:
    # -- webhook init container image repository
    imageName: "liqo/webhook-configuration"
  service:
    # -- webhook service annotations
    annotations: {}
  mutatingWebhookConfiguration:
    # -- mutatingWebhookConfiguration annotations
    annotations: {}
    # -- The label that needs to be applied to a namespace to make it eligible for pod offloading in a remote cluster
    namespaceSelector:
      liqo.io/enabled: "true"

peeringRequest:
  pod:
    # -- peering request pod annotations
    annotations: {}
    # -- peering request pod labels
    labels: {}
  # -- peeringRequest image repository
  imageName:  "liqo/peering-request-operator"

virtualKubelet:
  # -- virtual kubelet image repository
  imageName: "liqo/virtual-kubelet"
  initContainer:
    # -- virtual kubelet init container image repository
    imageName: "liqo/init-vkubelet"

# -- liqo name override
nameOverride: ""
# -- full liqo name override
fullnameOverride: ""

monitoring:
  # -- Enable Prometheus motoring for Liqo
  # NOTE: Prometheus CRDs have to be installed previously
  enable: true
  # -- Prometheus Service scraping period
  scrape: 100ms
  metrics:
    # -- Set the port exposing your metrics
    port: 8091
    # -- Set the port exposing your metrics in the Discovery component, it has to be different
    # due to a port collision in hostNetwork Pods
    discoveryPort: 8092
